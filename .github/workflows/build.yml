name: Build

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 3 * * *'

jobs:
  cri:
    strategy:
      matrix:
        train:
          - stable
          - testing
        arch: 
          - os: ubuntu-24.04
            name: linux/amd64 
          - os: ubuntu-24.04-arm
            name: linux/arm64
        include:
          - train: stable
            tags: |
              latest
              stable
          - train: testing
            tags: |
              testing
    runs-on: ${{ matrix.arch.os }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      
      - name: Discover upstream version
        uses: ropenttd/cdn_version_scraper@master
        with:
          channel: ${{ matrix.train }}
        id: version

      - name: Generate CRI metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/openttd
            docker.io/redditopenttd/openttd
          labels: |
            org.opencontainers.image.title=OpenTTD
            org.opencontainers.image.description=Lightweight build of OpenTTD, designed for server use, with some extra helping treats.
            org.opencontainers.image.url=https://github.com/ropenttd/docker_openttd
            org.opencontainers.image.source=https://github.com/openttd/openttd
            org.opencontainers.image.vendor=Reddit OpenTTD
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
          tags: |
            ${{ matrix.tags }}
            ${{ steps.version.outputs.version }}
            ${{ steps.version.outputs.semver_major }}
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GHCI
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          build-args: |
            OPENTTD_VERSION=${{ steps.version.outputs.version }}
          platforms: ${{ matrix.arch.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
